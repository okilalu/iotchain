import socket

# Define the server IP address and port
server_ip = '192.168.88.1'
server_port = 5000

# Create a socket object
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Connect to the server
client_socket.connect((server_ip, server_port))
print('Connected to the Smart Home Controller')

# Send data to the server
data = 'Temperature: 20C, Lights: On'
client_socket.send(data.encode())

# Receive response from the server
response = client_socket.recv(1024).decode()
print('Received response:', response)

# Close the connection with the server
client_socket.close()


# print ("Time: {:02d}:00, Lights: {}, Temperature: {:.1f}C, Humidity: {:.1f}%, Motion Detected: {}".format(
    #     hour, "On" if lights_on else "Off", temperature, humidity,  motion_detected))
    # print(message)

# Konfigurasi MultiChain
rpc_user = 'rpcuser'  # Ganti dengan nama pengguna RPC MultiChain Anda
rpc_password = 'rpcpassword'  # Ganti dengan kata sandi RPC MultiChain Anda
chain_name = 'mychain'  # Ganti dengan nama rantai MultiChain Anda
rpc_port = 12345  # Ganti dengan port RPC MultiChain Anda

# Membuat koneksi ke node MultiChain
mc = multichain.MultiChain(chain_name, rpcport=rpc_port, rpcuser=rpc_user, rpcpassword=rpc_password)

# Logic
 try:
        mc.publish('stream1', 'key1', data)
        print("Data berhasil disimpan di MultiChain")
    except multichain.MultichainException as e:
        print("Gagal menyimpan data di MultiChain:", str(e))